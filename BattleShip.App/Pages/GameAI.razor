@page "/PlayervsIA"
@using Battleship.Models
@inject HttpClient HttpClient

    <link rel="stylesheet" href="css/home.css">
    <link rel="stylesheet" href="css/grid.css">

    <a href="/" class="back-btn">Menu</a>

    <div class="grid-container-player" id="playerGrid">
        @for (int row = 0; row < 10; row++)
        {
            for (int col = 0; col < 10; col++)
            {
                <div class="grid-cell-player" onclick="handleCellClick('player', @row, @col)"></div>
            }
        }
    </div>

    <div class="grid-container-ia" id="iaGrid" onclick="handleIAGridClick(event)">
        @for (int row = 0; row < 10; row++)
        {
            for (int col = 0; col < 10; col++)
            {
                <div class="grid-cell-ia" data-row="@row" data-col="@col"></div>
            }
        }
    </div>

@code {
    private void HandleCellClick(string grid, int row, int col)
    {
        Console.WriteLine($"Clicked on {grid} grid at row: {row}, col: {col}");
    }

   private void HandleIAGridClick(ElementReference elementRef, UIMouseEventArgs eventArgs)
    {
        var rect = elementRef.GetBoundingClientRectAsync().Result;
        var rect = iaGrid.getBoundingClientRect();
        var x = eventArgs.ClientX - rect.Left;
        var y = eventArgs.ClientY - rect.Top;

        var cellSize = rect.Width / 10;
        var clickedRow = (int)Math.Floor(y / cellSize);
        var clickedCol = (int)Math.Floor(x / cellSize);

        Console.WriteLine($"Clicked on IA grid at row: {clickedRow}, col: {clickedCol}");
    }
    protected override async Task OnInitializedAsync()
    {
        var response = await HttpClient.GetAsync("http://localhost:5282/StartGameAI");
        var model = await response.Content.ReadFromJsonAsync<StartGameAIResponse>();
    }
}