@page "/PlayervsIA"
@inject HttpClient HttpClient

    <link rel="stylesheet" href="css/home.css">
    <link rel="stylesheet" href="css/grid.css">

    <a href="/" class="back-btn">Menu</a>

    <div class="grid-container-player" id="playerGrid">
        @for (int row = 0; row < 10; row++)
        {
            for (int col = 0; col < 10; col++)
            {
                <div class="grid-cell-player" onclick="handleCellClick('player', @row, @col)"></div>
            }
        }
    </div>

    <div class="grid-container-ia" id="iaGrid" onclick="handleIAGridClick(event)">
        @for (int row = 0; row < 10; row++)
        {
            for (int col = 0; col < 10; col++)
            {
                <div class="grid-cell-ia" data-row="@row" data-col="@col"></div>
            }
        }
    </div>

    function handleCellClick(grid, row, col) {
        console.log(`Clicked on ${grid} grid at row: ${row}, col: ${col}`);
    }

    function handleIAGridClick(event) {
        const iaGrid = document.getElementById('iaGrid');
        const rect = iaGrid.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;

        const cellSize = rect.width / 10;
        const clickedRow = Math.floor(y / cellSize);
        const clickedCol = Math.floor(x / cellSize);
        console.log(`Clicked on IA grid at row: ${clickedRow}, col: ${clickedCol}`);
    }

@code{
    protected override async Task OnInitializedAsync(){
        var response = await HttpClient.GetAsync("http://localhost:5282/StartGameIA");
        /*var model = response.Content.ReadFromJsonAsync<StartGameIAResponse>();*/
    }
}